version: "3.9"

configs:
  nginx_gateway_conf:
    file: ./nginx-gateway.conf

volumes:
  pgdata: {}
  media:  {}

networks:
  appnet:
    driver: overlay

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME:-type1db}
      POSTGRES_USER: ${DB_USER:-type1user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-type1pass}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - appnet

  inference:
    image: type1_inference:v1
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8001/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    deploy:
      replicas: 1
    networks:
      - appnet

  gateway:
    image: type1_gateway:v1
    environment:
      LOCAL: "0"
      DB_NAME: ${DB_NAME:-type1db}
      DB_USER: ${DB_USER:-type1user}
      DB_PASSWORD: ${DB_PASSWORD:-type1pass}
      DB_HOST: db
      DB_PORT: "5432"
      INFERENCE_URL: http://inference:8001
      DJANGO_SETTINGS_MODULE: settings
      SECRET_KEY: ${SECRET_KEY:-dev-secret}
      DEBUG: "0"
      ALLOWED_HOSTS: "*"
      MEDIA_ROOT: /app/media
      MEDIA_URL: /media/
    volumes:
      - media:/app/media
    command: >
      sh -c "
      python manage.py migrate &&
      gunicorn wsgi:application -b 0.0.0.0:8000 --workers 3 --timeout 90
      "
    healthcheck:
      test: ["CMD-SHELL","wget -qO- http://localhost:8000/api/detect/health/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
    deploy:
      replicas: 1
    networks:
      - appnet

  frontend:
    image: type1_frontend:v1
    deploy:
      replicas: 1
    networks:
      - appnet

  web:
    image: nginx:1.27-alpine
    # kalau 80 bentrok, ganti published: 8080
    ports:
      - target: 80
        published: 8080
        protocol: tcp
        mode: ingress
    configs:
      - source: nginx_gateway_conf
        target: /etc/nginx/conf.d/default.conf
        mode: 0444
    volumes:
      - media:/srv/media:ro
    # Swarm mengabaikan depends_on, tapi biarin aja
    depends_on:
      - frontend
      - gateway
    networks:
      - appnet